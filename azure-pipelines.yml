trigger:
  branches:
    include:
    - test
pool:
  vmImage: 'ubuntu-latest'
variables:
- name: VITE_API_BASE_URL
  value: ''
- name: NODE_ENV
  value: 'production'
stages:
- stage: __default
  jobs:
  - job: Build_and_Deploy
    displayName: 'Rakennus ja julkaisu'
    steps:
    - task: UseDotNet@2
      displayName: 'Asenna .NET Core SDK'
      inputs:
        packageType: 'sdk'
        version: '8.x'
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x' # tai haluamasi versio
      displayName: 'Set Node.js version'

    - script:  npm install --legacy-peer-deps

      displayName: 'Install dependencies'

    - task: DotNetCoreCLI@2
      displayName: 'Rakenna ja julkaise ASP.NET Core API'
      
      inputs:
      
        command: 'publish'
        projects: '**/ReactApp2.Server/*.csproj'
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/api'
    - task: NodeTool@0
      displayName: 'Asenna Node.js'
      inputs:
        versionSpec: '16.x'
    - task: CmdLine@2
      displayName: 'Rakenna React-sovellus'
      inputs:
        script: >
          mkdir -p reactapp2.client  # Ensure the directory exists

          echo "VITE_API_BASE_URL=" > reactapp2.client/.env.production

          npm install --legacy-peer-deps



          npm ci

          export PATH=$(npm bin):$PATH

          npm run build
        workingDirectory: 'reactapp2.client'
    - task: CopyFiles@2
      displayName: 'Kopioi React-sovelluksen build-tulosteet'
      inputs:
        SourceFolder: 'reactapp2.client/dist'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/react'
    - task: PublishBuildArtifacts@1
      displayName: 'Julkaise rakennusartifaktit'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'
        publishLocation: 'Container'
    - task: CopyFilesOverSSH@0
      displayName: 'Kopioi API Linux-virtuaalikoneelle'
      inputs:
        sshEndpoint: 'test'
        sourceFolder: '$(Build.ArtifactStagingDirectory)/api'
        targetFolder: '/var/www/map/api'
        cleanTargetFolder: true
    - task: SSH@0
      displayName: 'Unzip API on Linux VM'
      inputs:
        sshEndpoint: 'test'
        runOptions: 'inline'
        inline: |
          cd /var/www/map/api
          unzip ReactApp2.Server.zip -d /var/www/map/api
          sudo rm ReactApp2.Server.zip  # Optional: Clean up the zip file
    - task: CopyFilesOverSSH@0
      displayName: 'Kopioi React-sovellus Linux-virtuaalikoneelle'
      inputs:
        sshEndpoint: 'test'
        sourceFolder: '$(Build.ArtifactStagingDirectory)/react'
        targetFolder: '/var/www/map/react'
        cleanTargetFolder: true
    - task: SSH@0
      displayName: 'Käynnistä NGINX uudelleen'
      inputs:
        sshEndpoint: 'test'
        runOptions: 'inline'
        inline: 'sudo systemctl restart nginx'

